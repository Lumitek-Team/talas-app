import type { Metadata } from "next"
import { Geist, Geist_Mono, Comfortaa } from "next/font/google"
import "./globals.css"
import { ClerkProvider } from "@clerk/nextjs"
import { dark } from "@clerk/themes"
import { currentUser } from "@clerk/nextjs/server"
import { getTrpcCaller } from "./_trpc/server"
import TRPCProvider from "@/app/_trpc/Provider";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
})

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
})

const comfortaa = Comfortaa({
  variable: "--font-comfortaa",
  subsets: ["latin"],
  weight: ["400", "700"],
})

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  const user = await currentUser();


  if (user) {
    const { id, emailAddresses, firstName, lastName, externalAccounts, imageUrl } = user;

    const trpc = await getTrpcCaller();
    await trpc.user.syncWithSupabase({
      id: id,
      name: `${firstName} ${lastName}`,
      email: emailAddresses[0].emailAddress,
      auth_type: externalAccounts[0]?.provider || "unknown",
      photo_profile: imageUrl,
    });
  }

  return (
    <ClerkProvider
      appearance={{
        baseTheme: dark,
      }}
    >
      <TRPCProvider>
        <html lang="en" className="dark">
          <body
            className={`${geistSans.variable} ${geistMono.variable} ${comfortaa.variable} antialiased`}
          >
            {children}
          </body>
        </html>
      </TRPCProvider>
    </ClerkProvider>
  )
}