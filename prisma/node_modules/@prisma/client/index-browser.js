
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  auth_type: 'auth_type',
  bio: 'bio',
  created_at: 'created_at',
  email_contact: 'email_contact',
  github: 'github',
  instagram: 'instagram',
  linkedin: 'linkedin',
  photo_profile: 'photo_profile',
  username: 'username',
  gender: 'gender'
};

exports.Prisma.ProjectScalarFieldEnum = {
  id: 'id',
  id_category: 'id_category',
  slug: 'slug',
  title: 'title',
  content: 'content',
  is_archived: 'is_archived',
  image1: 'image1',
  image2: 'image2',
  image3: 'image3',
  image4: 'image4',
  image5: 'image5',
  video: 'video',
  link_github: 'link_github',
  link_figma: 'link_figma',
  count_likes: 'count_likes',
  count_comments: 'count_comments',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CommentScalarFieldEnum = {
  id: 'id',
  id_user: 'id_user',
  id_project: 'id_project',
  content: 'content',
  count_like: 'count_like',
  created_at: 'created_at',
  updated_at: 'updated_at',
  parent_id: 'parent_id'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  id_user: 'id_user',
  title: 'title',
  created_at: 'created_at',
  is_read: 'is_read',
  type: 'type'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  slug: 'slug',
  title: 'title',
  count_projects: 'count_projects',
  created_at: 'created_at'
};

exports.Prisma.Count_summaryScalarFieldEnum = {
  id: 'id',
  id_user: 'id_user',
  count_project: 'count_project',
  count_following: 'count_following',
  count_follower: 'count_follower',
  created_at: 'created_at',
  all_notif_read: 'all_notif_read'
};

exports.Prisma.FollowScalarFieldEnum = {
  id: 'id',
  id_follower: 'id_follower',
  id_following: 'id_following',
  created_at: 'created_at'
};

exports.Prisma.ProjectUserScalarFieldEnum = {
  id: 'id',
  id_user: 'id_user',
  id_project: 'id_project',
  ownership: 'ownership',
  collabStatus: 'collabStatus',
  created_at: 'created_at'
};

exports.Prisma.BookmarkScalarFieldEnum = {
  id: 'id',
  id_user: 'id_user',
  id_project: 'id_project',
  created_at: 'created_at'
};

exports.Prisma.LikeProjectScalarFieldEnum = {
  id: 'id',
  id_user: 'id_user',
  id_project: 'id_project',
  created_at: 'created_at'
};

exports.Prisma.LikeCommentScalarFieldEnum = {
  id: 'id',
  id_user: 'id_user',
  id_comment: 'id_comment',
  created_at: 'created_at'
};

exports.Prisma.PinProjectScalarFieldEnum = {
  id: 'id',
  id_user: 'id_user',
  id_project: 'id_project',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.genderType = exports.$Enums.genderType = {
  MALE: 'MALE',
  FEMALE: 'FEMALE'
};

exports.notifType = exports.$Enums.notifType = {
  FOLLOW: 'FOLLOW',
  LIKE_PROJECT: 'LIKE_PROJECT',
  LIKE_COMMENT: 'LIKE_COMMENT',
  COMMENT: 'COMMENT'
};

exports.ownershipType = exports.$Enums.ownershipType = {
  OWNER: 'OWNER',
  COLLABORATOR: 'COLLABORATOR'
};

exports.collabStatusType = exports.$Enums.collabStatusType = {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  REJECTED: 'REJECTED'
};

exports.Prisma.ModelName = {
  User: 'User',
  Project: 'Project',
  Comment: 'Comment',
  Notification: 'Notification',
  Category: 'Category',
  count_summary: 'count_summary',
  Follow: 'Follow',
  ProjectUser: 'ProjectUser',
  Bookmark: 'Bookmark',
  LikeProject: 'LikeProject',
  LikeComment: 'LikeComment',
  pinProject: 'pinProject'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
